<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Protocols.TestTools.VSTS</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor">
            <summary>
            This is the implementation of AsynchronousErrorProcessor for processing errors occurred in non-main thread.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of AsynchronousErrorProcessor
            </summary>
            <param name="assertFailuresBeforeThrowException">The number of assert fail can be bypassed.</param>
            <param name="maxFailuresToDisplayPerTestCase">The maxNumber of failure messages displayed.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.Initialize">
            <summary>
            Sets the current thread as main thread and clean the error list.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.Cleanup">
            <summary>
            Process the pending errors in error list.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.Process">
            <summary>
            Process the errors in error list.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.ReportAsyncException(System.Exception)">
            <summary>
            Adds the exception reported by checkers to the error list and terminates the current thread if current thread is not main thread. 
            </summary>
            <param name="checkerException">The exception generated by checkers.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.GetStackTraceString(System.Int32)">
            <summary>
            Generates the stack trace string
            </summary>
            <param name="skippedFrames">The number of call stack frames which should be skipped when generating stack trace string.</param>
            <returns>The stack trace string.</returns>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.AsynchronousErrorProcessor.ErrorDescriptor">
            <summary>
            ErrorDescriptor contains the exception generated by checkers and the call stack string.
            </summary>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker">
            <summary>
            The default assertion checker which is compatible with VSTS.
            </summary>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2">
            <summary>
            An abstract base class of checkers which implements IChecker.
            </summary>
            <typeparam name="TFailException">The type of exception to be raised if a check is failed.</typeparam>
            <typeparam name="TInconclusiveException">The type of exception to be raised if a check is inconculsive.</typeparam>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.#ctor(Microsoft.Protocols.TestTools.ITestSite,System.String,Microsoft.Protocols.TestTools.LogEntryKind,Microsoft.Protocols.TestTools.LogEntryKind,Microsoft.Protocols.TestTools.LogEntryKind,Microsoft.Protocols.TestTools.ICheckerConfig)">
            <summary>
            Constructs an instance of DefaultChecker.
            </summary>
            <param name="testSite">The test site to be bound.</param>
            <param name="checkerName">The name of the current checker (Assert, Assume or Debug).</param>
            <param name="failedLogKind">The log entry kind for logging a failed check.</param>
            <param name="succeededLogKind">The log entry kind for logging a succeeded check.</param>
            <param name="inconclusiveLogKind">The log entry kind for logging an inconclusive check.</param>
            <param name="checkerConfig">The checker confuguration to crate async error processor.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.CheckErrors">
            <summary>
            Checks if any error occurs.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.LogFailingStacks">
            <summary>
            Dumps the call stacks of the calling assembly to logs.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.GetRequirementId(System.Object[])">
            <summary>
            Gets the Requirement ID from parameters
            (if parameters contain requirement id, it will contain exactly two objects;
            the first one is a string flag, the second is a string which represents requirement id)
            </summary>
            <param name="parameters">Input parameters</param>
            <returns>The requirement id</returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.CreateFailException(System.String)">
            <summary>
            Creates a failure exception.
            The method needs to be overridden to create an instance of TFailException
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>The instance of TFailException type</returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.CreateInconclusiveException(System.String)">
            <summary>
            Creates an inconclusive exception.
            The method needs to be overridden to create an instance of TInconclusiveException
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>The instance of TInconclusiveException type</returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.Fail(System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.Fail(System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains one or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.Pass(System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.Pass(System.String,System.Object[])"/>.
            This method generates a log entry.
            </summary>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains one or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.Inconclusive(System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.Inconclusive(System.String,System.Object[])"/>.
            This method generates a log entry and throws an inconclusive exception if failed.
            </summary>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains one or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.AreEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.AreEqual``1(``0,``0,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <typeparam name="T">The type of the objects to compare.</typeparam>
            <param name="expected">The first object to compare. This is the object the test expects.</param>
            <param name="actual">The second object to compare. This is the object the test produced.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.AreNotEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.AreNotEqual``1(``0,``0,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <typeparam name="T">The type of the objects to compare.</typeparam>
            <param name="expected">The first object to compare. This is the object the test expects.</param>
            <param name="actual">The second object to compare. This is the object the test produced.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.AreSame(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.AreSame(System.Object,System.Object,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="expected">The first object to compare. This is the object the test expects.</param>
            <param name="actual">The second object to compare. This is the object the test produced.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.AreNotSame(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.AreSame(System.Object,System.Object,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="expected">The first object to compare. This is the object the test expects.</param>
            <param name="actual">The second object to compare. This is the object the test produced.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsTrue(System.Boolean,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsTrue(System.Boolean,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The bool value to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsFalse(System.Boolean,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsFalse(System.Boolean,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The bool value to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsNotNull(System.Object,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsNotNull(System.Object,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The object to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsNull(System.Object,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsNull(System.Object,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The object to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsInstanceOfType(System.Object,System.Type,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The object value to check.</param>
            <param name="type">The object type to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsNotInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsNotInstanceOfType(System.Object,System.Type,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="value">The object value to check.</param>
            <param name="type">The object type to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.IsSuccess(System.Int32,System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.IsSuccess(System.Int32,System.String,System.Object[])"/>.
            This method generates a log entry and throws a failure exception if failed.
            </summary>
            <param name="hresult">The HRESULT value to check.</param>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>        
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.Unverified(System.String,System.Object[])">
            <summary>
            Implements <see cref="M:Microsoft.Protocols.TestTools.IChecker.Unverified(System.String,System.Object[])"/>
            </summary>
            <param name="message">A composite format string.</param>
            <param name="parameters">An Object array which contains zero or more objects to format.</param>     
        </member>
        <member name="P:Microsoft.Protocols.TestTools.Checking.DefaultChecker`2.Site">
            <summary>
            Implements <see cref="P:Microsoft.Protocols.TestTools.IChecker.Site"/>
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker.#ctor(Microsoft.Protocols.TestTools.ITestSite,Microsoft.Protocols.TestTools.ICheckerConfig)">
            <summary>
            Constructs a new instance of DefaultAssertChecker.
            </summary>
            <param name="testSite">The test site which the checker is hosted on.</param>
            <param name="checkerConfig">The configuration to checker.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker.CreateFailException(System.String)">
            <summary>
            Creates a failure exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of AssertFailedException.
            </returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker.CreateInconclusiveException(System.String)">
            <summary>
            Creates an inconclusive exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultAssertChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of AssertInconclusiveException.
            </returns>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker">
            <summary>
            The default assumption checker which is compatible with VSTS.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker.#ctor(Microsoft.Protocols.TestTools.ITestSite,Microsoft.Protocols.TestTools.ICheckerConfig)">
            <summary>
            Constructs a new instance of DefaultAssumeChecker.
            </summary>
            <param name="testSite">The test site which the checker is hosted on.</param>
            <param name="checkerConfig">The configuration to checker.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker.CreateFailException(System.String)">
            <summary>
            Creates a failure exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of AssertInconclusiveException.
            </returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker.CreateInconclusiveException(System.String)">
            <summary>
            Creates an inconclusive exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultAssumeChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of AssertInconclusiveException.
            </returns>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker">
            <summary>
            The default debug checker which is compatible with VSTS.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker.#ctor(Microsoft.Protocols.TestTools.ITestSite,Microsoft.Protocols.TestTools.ICheckerConfig)">
            <summary>
            Constructs a new instance of DefaultDebugChecker.
            </summary>
            <param name="testSite">The test site which the checker is hosted on.</param>
            <param name="checkerConfig">The configuration to checker.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker.CreateFailException(System.String)">
            <summary>
            Creates a failure exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Protocols.TestTools.Checking.TestDebugException"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker.CreateInconclusiveException(System.String)">
            <summary>
            Creates an inconclusive exception for <see cref="T:Microsoft.Protocols.TestTools.Checking.DefaultDebugChecker"/>.
            </summary>
            <param name="message">A message that describes the exception.</param>
            <returns>
            An instance of <see cref="T:Microsoft.Protocols.TestTools.Checking.TestDebugException"/>.
            </returns>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.TestDebugException">
            <summary>
            An exception which is thrown when a debugging check result is failed or inconclusive.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.TestDebugException.#ctor">
            <summary>
            Constructs a new instance of TestDebugException.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.TestDebugException.#ctor(System.String)">
            <summary>
            Initializes a new instance of TestDebugException with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.TestDebugException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of TestDebugException with a specified error message and an inner exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the parameter is not a 
            null reference, the current exception is raised in a catch block that handles 
            the inner exception. </param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.TestDebugException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TestDebugException class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.CheckResult">
            <summary>
            The result of checking
            </summary>
        </member>
        <member name="F:Microsoft.Protocols.TestTools.Checking.CheckResult.Succeeded">
            <summary>
            Indicates a checking verification has passed.
            </summary>
        </member>
        <member name="F:Microsoft.Protocols.TestTools.Checking.CheckResult.Failed">
            <summary>
            Indicates a checking verification has failed.
            </summary>
        </member>
        <member name="F:Microsoft.Protocols.TestTools.Checking.CheckResult.Inconclusive">
            <summary>
            Indicates the inability to determine the result.
            </summary>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.Checking.VsCheckerFactory">
            <summary>
            The Checker Factory
            <para/>
            (from which the checker can be retrieved by checker kind, test site, and checker configuration.)
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.Checking.VsCheckerFactory.GetChecker(Microsoft.Protocols.TestTools.CheckerKinds,Microsoft.Protocols.TestTools.ITestSite,Microsoft.Protocols.TestTools.ICheckerConfig)">
            <summary>
            Gets a checker by checker kind, test site, and checker config.
            </summary>
            <param name="kind">The checker kind</param>
            <param name="testSite">The test site</param>
            <param name="checkerConfig">The checker configuration</param>
            <returns>The checker</returns>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.AutoCaptureException">
            <summary>
            Represents errors that occurs during running auto-capture.
            </summary>
        </member>
        <member name="F:Microsoft.Protocols.TestTools.AutoCaptureException.StopRunning">
            <summary>
            Stops running test cases when auto-capture error occurs.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.AutoCaptureException.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of AutoCaptureException with error message specified.
            </summary>
            <param name="msg">Error message.</param>
            <param name="stopRunning">Stops running test cases when auto-capture error occurs.</param>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.IAutoCapture">
            <summary>
            An interface for implementing automatic network message capture.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.IAutoCapture.Initialize(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Initializes the AutoCapture class before test cases run.
            </summary>
            <param name="properties">Properties in PTF Configure file.</param>
            <param name="className">The test class name.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.IAutoCapture.Cleanup">
            <summary>
            Cleans up the autocapture class after all the test cases in a class are finished.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.IAutoCapture.StartCapture(System.String)">
            <summary>
            Starts a capture for a test case.
            </summary>
            <param name="testName">Test case name</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.IAutoCapture.StopCapture">
            <summary>
            Stops the capture for a test case.
            </summary>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.PtfTestClassBase">
            <summary>
            Internal use only. An implementation of a Spec Explorer test class base which is 
            integrating into PTF.
            </summary>
        </member>
        <member name="T:Microsoft.Protocols.TestTools.TestClassBase">
            <summary>
            A base test class for VSTS
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.#ctor">
            <summary>
            Constructor uses the default test suit name
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="configPath">Configuration path</param>
            <param name="testSuiteName">Test suite name</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.TestInitialize">
            <summary>
            Test initialize
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.TestCleanup">
            <summary>
            Test clean up
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.BaseTestInitialize">
            <summary>
            Only for internal use. Test method level initialization.
            TCM must call this method before each
            test method is executed.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.BaseTestCleanup">
            <summary>
            Only for internal use. Test method level cleanup action.
            TCM must call this method after each
            test method is executed.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.Initialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)">
            <summary>
            Initializes the test suite base class. 
            This method must be called by class initialize method in your test class.
            </summary>
            <remarks>
            The calling assembly name is used as test suite name.
            </remarks>
            <param name="testContext">VSTS test context.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.Initialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext,System.String)">
            <summary>
            Initializes the test suite base class with explicitly given test suite name. 
            This method must be called by class initialize method in your test class.
            </summary>
            <param name="testContext">VSTS test context.</param>
            <param name="testSuiteName">The name of the test suite. The test site uses this name to find configuration files.</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.TestClassBase.Cleanup">
            <summary>
            Cleans up the test suite. 
            User must call this method in ClassCleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.TestClassBase.TestContext">
            <summary>
            Only for internal use. This property is to support the VSTS infrastructure. 
            Don't use this property in your test code.
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.TestClassBase.Site">
            <summary>
            Only for internal use. This property is to support the SE infrastructure.
            Don't use this property in your test code.
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.TestClassBase.BaseTestSite">
            <summary>
            The base test site
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.TestClassBase.ProtocolTestContext">
            <summary>
            Only for internal use. TCM must set this property
            before setup method (with the [Setup] attribute)
            and update it during tests run.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.#ctor(System.String,System.String)">
            <summary>
            Constructs test class, only used by SE online testing. This constructor
            ensures that a new test site will be created.
            </summary>
            <param name="configPath">Configuration path</param>
            <param name="testSuiteName">Test suite name</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.TestCleanup">
            <summary>
            Test clean up
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.GetAdapter(System.Type)">
            <summary>
            Returns PTF adapter.
            </summary>
            <param name="adapterType">The adapter type</param>
            <returns>The adapter</returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.BeginTest(System.String)">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.BeginTest(System.String)"/>
            </summary>
            <param name="name">The test name</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.EndTest">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.EndTest"/>
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.Assert(System.Boolean,System.String)">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.Assert(System.Boolean,System.String)"/>
            </summary>
            <param name="condition">A bool condition</param>
            <param name="description">Description message for Assert</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.Assume(System.Boolean,System.String)">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.Assume(System.Boolean,System.String)"/>
            </summary>
            <param name="condition">A bool condition</param>
            <param name="description">Description message for Assume</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.Checkpoint(System.String)">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.Checkpoint(System.String)"/>
            </summary>
            <param name="description">Description message for a check point in log</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.Comment(System.String)">
            <summary>
            See <see cref="M:Microsoft.SpecExplorer.Runtime.Testing.GeneratedTestClassBase.Comment(System.String)"/>
            </summary>
            <param name="description">Description message for a comment in log</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.IsTrue(System.Boolean,System.String)">
            <summary>
            Checks condition together with description to by-pass assertion failure.
            </summary>
            <param name="condition">A bool condition</param>
            <param name="description">Description message for Assert</param>
            <returns>false if and only if condition is false and description is not by-passed.</returns>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.SetSwitch(System.String,System.String)">
            <summary>
            Sets the field value of "proceedcontroltimeout", "quiescencetimeout", or "observationbound"
            </summary>
            <param name="name">
            The field name (in string format).
            <para/>
            Valid names include: "proceedcontroltimeout", "quiescencetimeout", and "observationbound".
            </param>
            <param name="value">Value (in string format) for the given field</param>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.InitializeTestManager">
            <summary>
            To initialize the test manager
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.CleanupTestManager">
            <summary>
            To clean up the test manager
            </summary>
        </member>
        <member name="M:Microsoft.Protocols.TestTools.PtfTestClassBase.Make``1(System.String[],System.Object[])">
            <summary>
            Creates a struct of type T with given field initialization.
            </summary>
            <typeparam name="T">Type T</typeparam>
            <param name="fieldNames">The field names</param>
            <param name="fieldValues">The field values</param>
            <returns>The created struct</returns>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.PtfTestClassBase.TestSite">
            <summary>
            Test site
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.PtfTestClassBase.QuiescenceTimeout">
            <summary>
            Time out for the quiescence status
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.PtfTestClassBase.ProceedControlTimeout">
            <summary>
            Time out for the proceed status
            </summary>
        </member>
        <member name="P:Microsoft.Protocols.TestTools.PtfTestClassBase.Manager">
            <summary>
            Returns the test manager. Only valid after initialization and before cleanup.
            </summary>
        </member>
    </members>
</doc>
